{"version":3,"sources":["../../src/graphql/resolvers.js"],"names":["resolvers","Query","ingredients","recetas","users","Mutation","addUser","parent","data","context","info","profileImage","createReadStream","stream","url","userInfo","console","log","addReceta","user","recetaInfo","ingredientID","newReceta","filter","_id","filterReceta","filterUser","update","$push","updateUser","updateReceta","addIngredient","RecetaModel","create","newData","addFavorite","recetaID","isActive","name","removeFavorite","$pull","deleteReceta","doLogin","userName","password"],"mappings":"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","sourcesContent":["import {\r\n  addUserAction,\r\n  updateUserAction,\r\n  doLoginAction,\r\n  getAllUsersAction\r\n} from './actions/usersActions';\r\n\r\nimport {\r\n  addRecetaAction,\r\n  updateRecetaAction,\r\n  getAllRecetasAction,\r\n  getRecetaAction,\r\n  isRecetaActive,\r\n  deleteRecetaAction\r\n} from './actions/recetasActions';\r\n\r\nimport {\r\n  addIngredientAction,\r\n  updateIngredientAction,\r\n  getAllIngredientsAction\r\n} from './actions/ingredientsActions';\r\n\r\nimport { storeUpload } from '../graphql/actions/utils/uploader';\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    ingredients: () => getAllIngredientsAction(),\r\n    recetas: () => getAllRecetasAction(),\r\n    users: () => getAllUsersAction()\r\n  },\r\n  Mutation: {\r\n    addUser: async (parent, data, context, info) => {\r\n      try {\r\n        // sube el archivo\r\n        const { createReadStream } = await data.data.profileImage;\r\n        const stream = createReadStream();\r\n        const { url } = await storeUpload(stream, 'image');\r\n\r\n        // registra usario\r\n        const userInfo = {\r\n          ...data.data,\r\n          profileImage: url,\r\n        };\r\n\r\n        return await addUserAction(userInfo);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    addReceta: async (parent, data, context, info) => {\r\n      try {\r\n        const { user } = context;\r\n        const { recetaInfo, ingredientID } = data;\r\n        const newReceta = await addRecetaAction(recetaInfo);\r\n        const filter = { _id: ingredientID };\r\n        const filterReceta = { _id: newReceta._id };\r\n        const filterUser = {_id: user._id};\r\n        const update = { $push: { 'recetas': newReceta._id } };\r\n        const updateUser = { $push: { 'recetas': newReceta._id } };\r\n        const updateReceta = { $push: { 'ingredients': ingredientID } };\r\n        await updateIngredientAction(filter, update);\r\n        await updateRecetaAction(filterReceta, updateReceta);\r\n        await updateUserAction(filterUser, updateUser);\r\n        return newReceta;\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    addIngredient: async (parent, data, context, info) => {\r\n      try {\r\n        const newData = await RecetaModel.create(data.data);\r\n        console.log(\"TCL: newData\", newData);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    addFavorite: async (parent, data, context, info) => {\r\n      try {\r\n        const { recetaID } = data;\r\n        const { user } = context;\r\n        const isActive = await isRecetaActive(recetaID);\r\n\r\n        if(isActive) {\r\n          const filter = { _id: user._id };\r\n          const update = { $push: { 'favorites': recetaID } };\r\n          console.log(\"Favorite added to user: \" + user.name);\r\n          return await updateUserAction(filter, update);\r\n        } else {\r\n          console.log(\"Favorite not added: Receta is not active.\");\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    removeFavorite: async (parent, data, context, info) => {\r\n      try {\r\n        const { recetaID } = data;\r\n        const { user } = context;\r\n        const filter = { _id: user._id };\r\n        const update = { $pull: { 'favorites': recetaID } };\r\n        console.log(\"Favorite removed from user: \" + user.name);\r\n        return await updateUserAction(filter, update);\r\n\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    deleteReceta: async (parent, data, context, info) => {\r\n      try {\r\n        const { recetaID } = data;\r\n        console.log(\"Receta Deleted.\");\r\n        return await deleteRecetaAction(recetaID);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n    doLogin: async (parent, data, context, info) => {\r\n      try {\r\n        const { userName, password } = data;\r\n        return await doLoginAction(userName, password);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error);\r\n      }\r\n    },\r\n  }\r\n};\r\n\r\nexport default resolvers;\r\n"],"file":"resolvers.js"}